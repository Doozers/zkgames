{
  "name": "zkPetitsChevaux",
  "functions": [
    {
      "name": "_constructor",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "dicesAddress",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_play",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "seedHash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "player",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "_move",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_register",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "user",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "seedHash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "_",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "_",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "_",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "_",
          "type": {
            "kind": "array",
            "length": 0,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/+2UYQ7CIAyFCzi2zsQ7eANMPMDufyph0uRZ9ZfPH8vWpGFroXx9AUYRCfK0VP0k72b5pY/lN7sFXq3yT864Ec5E5AwfOAOcizYO1XP1sfq1x7XH7RxZzNZFiCVXXyFvluF7IfWW+dqXofMLjNjvBbQi7ntXpxHq6XUT2L+tmbgsq65KrtlqzMBvvRr7GfIKc2Yux/pWTfKqqf0j38G6b1aFWIZYdMztHvp7SgP1db892mYPr80/z/0HAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "dicesAddress",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "debug",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWw7CIBBcyks08d9PbwA36Bm8QRMbP03U+8cS2XRciT+FTZrdAp0ZZreKiBR9QtMaStTnUjtYH0uOG8MBXytMu2DYghVA81DysdxlaMqb0qHioQNv2/DEhP1BXAKuQN995DUtvAhQ81727gT7pvINnzWVc3h32+HuyDPCO3PtQYMBLa6tlpgxPK2hgYt1sCYPPnmhF3vgIfeYnR49wd5z/JtR5t8tD/8zz9f9Md3myzxdFUDIkRoABmsce7YfR5PP8p6nX4nN/JC4SuQcbzFqEy58BQAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "dices",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWwrCMBDcvI2C/356g3qDnsEbFCx+Cur9scEMHWPwx2Sh7DZJZyazWyUiSt5hZA1V1Mdce1ofcx7+DE98rTDdguEyViTNOud9votuy3vaVTz05G0rHu4P4wpxRfnsI9ZM4UWkGnvJuwPt28o3OGsr5/jursPdmWekd3BtSYMlLb6tliFhBFnDEBd0QFMgn0Khl3sQKPeYnR494d4jfs0o+DfLg3/m8bzdp+t8nqeLIohypDTBcM1jD/t5NHEWe0G+JTbzo8RVRU7xAo43T8Z8BQAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "horses",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VUXQrCMAxOs7ZzCj766BlUdoCewRsMHD4K6v1xwwQ/Y31aGxjJ8v99LfVE5OgtDX3EgfZgs+TNvr34I9Ql0YeFEmGHUj3D1CNIrw52ZtFbwcJl5542GV4j8F1oztHRtySwG8Bt8zqIM/jY1M7c7SDuMzWa6zN5iD1UwI5zEvzrrDXsgPsFgxOxa6ylKmfWV+CiR87JcE9mFmJcTZ/e1cfzdh+u43kcLrmnwB69tZHKaGqQXo219Ltisbth+/57z1ReAJR7+hQFAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "last_timestamp",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWwrCMBDcvI2C/356g/QGPYM3KFj8FNT7Y4NZOq7BnyYLZbdJOjOZ3SoiUvQJQ2soUZ9L7WF9LDltDA98rTDdguEKVgTNuuRjuYtuyjukQ8VDD9624UkD9gdxCbgiffeR14zwIkLNe9m7E+zbyjd81lbO4d1dh7sjzwjvzLUHDRa0+LZaUsYItIYBLtbBmgL4FIRe7EGA3GN2evQEe8/xb0aZf7c8/M88X/fHdJsv83RVACFHSgMM1jj2bD+OJp/lvUC/Epv5IXGVyDneduaaynwFAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "play",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "dicesAddress",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "_seed",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "player",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "_move",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "players",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VUzQrCMAxOs7ZzCh49+gwKw3OfwTcYODwK6vvjhgl+xnpaGxjJ8v99LfVE5OgtDX3EgfZgs+TNvr34I9Ql0YeFEmGHUj3D1CNIrw52ZtFbwcJl5542GV4j8F1oztHRtySwG8Bt8zqIM/jY1M7c7SDuMzWa6zN5iD1UwI5zEvzrrDXsgPsFgxOxa6ylKmfWV+CiR87JcE9mFmJcTZ/e1cfzdh+u43kcLrmnwB69tZHKaGqQXo219Ltisbth+/57z1Rec9SjVxQFAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "register",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "dicesAddress",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "_seed",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "round",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWw7CIBBcyks08d9Pb1Bv0DN4gyZWP03U+8cSmXRE4k9hk2a3QGeG2a0SESWf0LKEyupjqh2tDyn3K8MRXy1MO2PYhBVIc5fyPt2lq8t73RU8dORtJZ4T94dxhbiCfPcRazrzIlCNvejdgfZN4RucNYVzfHfb4O7MM9A7uLakwZAWV1dLHzG8LKGJCzqgyZNPPtPLPfCUW8xOi55w7xH/ZhT8m/nBP/N83R/jbTpP40URRD5SHcFwzWMP+3k0cRZ7Xn4lVvMjx1VZjvEGw72gpnwFAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "seedHashes",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VUXQrCMAxOs7ZzCj766BkUdoCewRsUHD4K6v1xwwQ/Y32yDYxk+f++lnoicvSSjt7iQHuwWfIW3178EeqS6MOfEmGHWj3D3CNIrwF2ZtFbwcJ15+ZNgdcIfFeac3T0KQnsDnDbvAHiDD42tQt3O4j7Qo3m+kIeYg8NsOOcBP86aw074H7B4ETsGuupyZmNDbgYkXMy3JOZhRhX86d39f643vJlOk35XHoK7NFbG6mMpgbp1VhP3ytWuxu276/3TOUJBM7l9hQFAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "winner",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWw7CIBBcyks08d9Pb1Bv0DN4gyYSP03U+8cSmXRE4o+wSbNboDPD7FaJiJJ3aFlDFfUx147Wp5zHP8MRXytMu2DYjBVI85DzPt9laMsbdxUPHXnbiOfE/WFcIa4gn33Emi68CFRjL3l3oH1T+QZnTeUc3912uDvzTPQOri1pMKTFtdUyJgwva2jigg5o8uSTL/RyDzzlHrPToyfce8SvGQX/Znnwzzyet/t8jec4XxRBlCM1EAzXPPawn0cTZ7Hn5VtiMz9KXFXkFC9LL0tQfAUAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "",
      "",
      "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
      "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"
    ],
    "fileMap": {
      "1": {
        "source": "mod types;\n\n// Minimal token implementation that supports `AuthWit` accounts.\n// The auth message follows a similar pattern to the cross-chain message and includes a designated caller.\n// The designated caller is ALWAYS used here, and not based on a flag as cross-chain.\n// message hash = H([caller, contract, selector, ...args])\n// To be read as `caller` calls function at `contract` defined by `selector` with `args`\n// Including a nonce in the message hash ensures that the message can only be used once.\n\n\ncontract zkPetitsChevaux {\n\n    use dep::aztec::{\n        hash::pedersen_hash,\n        selector::compute_selector,\n        context::{PrivateContext, PublicContext, Context},\n        types::type_serialization::{\n            TypeSerializationInterface,\n            field_serialization::{FieldSerializationMethods, FIELD_SERIALIZED_LEN},\n        },\n        state_vars::{map::Map, public_state::PublicState, set::Set},\n        types::address::{AztecAddress},\n    };\n\n    // docs:end:storage_struct\n    use crate::types::{\n        game::{Game, GameSerializationMethods, GAME_SERIALIZED_LEN, serializeGame, deserializeGame, serializeField4, deserializeField4},\n    };\n\n    // docs:start:storage_struct\n    struct Storage {\n        dices: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        horses: PublicState<[Field;4], 4>,\n        players: PublicState<[Field;4], 4>,\n        seedHashes: PublicState<[Field;4], 4>,\n        winner: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        round: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        last_timestamp: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        debug: PublicState<Field, FIELD_SERIALIZED_LEN>,\n    }\n\n    // docs:start:storage_init\n    impl Storage {\n        fn init(context: Context) -> Self {\n            Storage {\n                dices: PublicState::new(\n                    context,\n                    1,\n                    FieldSerializationMethods,\n                ),\n                horses: PublicState::new(\n                    context,\n                    2,\n                    TypeSerializationInterface {\n                        serialize: serializeField4,\n                        deserialize: deserializeField4,\n                    }\n                ),\n                players: PublicState::new(\n                    context,\n                    6,\n                    TypeSerializationInterface {\n                        serialize: serializeField4,\n                        deserialize: deserializeField4,\n                    }\n                ),\n                seedHashes: PublicState::new(\n                    context,\n                    10,\n                    TypeSerializationInterface {\n                        serialize: serializeField4,\n                        deserialize: deserializeField4,\n                    }\n                ),\n                winner: PublicState::new(\n                    context,\n                    14,\n                    FieldSerializationMethods,\n                ),\n                round: PublicState::new(\n                    context,\n                    15,\n                    FieldSerializationMethods,\n                ),\n                last_timestamp: PublicState::new(\n                    context,\n                    16,\n                    FieldSerializationMethods,\n                ),\n                debug: PublicState::new(\n                    context,\n                    17,\n                    FieldSerializationMethods,\n                ),\n            }\n        }\n    }\n    // docs:end:storage_init\n\n    // docs:start:constructor\n    #[aztec(private)]\n    fn constructor(dicesAddress: Field) {\n        let selector = compute_selector(\"_constructor(Field)\");\n        context.call_public_function(context.this_address(), selector, [dicesAddress]);\n    }\n\n    // docs:end:constructor\n    #[aztec(public)]\n    internal fn _constructor(dicesAddress: Field) {\n        storage.dices.write(dicesAddress);\n    }\n\n    #[aztec(private)]\n    fn register(dicesAddress: Field, _seed: Field) {\n        let seed: u96 = _seed as u96;\n        let rollSelector = compute_selector(\"roll(u96,u96)\");\n        let _ = context.call_private_function(dicesAddress, rollSelector, [0, seed as Field]); \n        let seedHash = pedersen_hash([seed as Field], 10);\n\n        let selector = compute_selector(\"_register(Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [context.msg_sender(), seedHash]); \n    }\n\n    #[aztec(public)]\n    internal fn _register(user: Field, seedHash: Field) {\n        let mut players = storage.players.read();\n        let mut seedHashes = storage.seedHashes.read();\n        let mut registered = false;\n        for i in 0..4 {\n            if players[i] == 0 {\n                if registered == false {\n                players[i] = user;\n                seedHashes[i] = seedHash;\n                registered = true;\n                }\n            }\n        }\n        if players[3] != 0 {\n            storage.last_timestamp.write(context.timestamp());\n        }\n        storage.players.write(players);\n        storage.seedHashes.write(seedHashes);\n    }\n\n    #[aztec(private)]\n    fn play(dicesAddress: Field, _seed: Field, player: Field, _move: Field) {\n       let seed: u96 = _seed as u96;\n       let move: u8 = _move as u8;\n       let seedHash = pedersen_hash([seed as Field], 10);\n       let rollSelector = compute_selector(\"roll(u96,u96)\");\n       let _ = context.call_private_function(dicesAddress, rollSelector, [0, seed as Field]); \n       let playSelector = compute_selector(\"_play(Field,Field,u8)\");\n       context.call_public_function(context.this_address(), playSelector, [seedHash, player, move as Field]);\n    }\n\n    #[aztec(public)]\n    internal fn _play(seedHash: Field, player: Field, _move: Field) {\n        let move: u8 = _move as u8;\n        let currentRound = storage.round.read();\n        assert(currentRound as u120 % 4 == player as u120, \"Not your turn\");\n        let selector = compute_selector(\"readDice(Field,u96)\");\n        let return_values = context.call_public_function(storage.dices.read(), selector, [context.this_address(), 0]);\n        storage.debug.write(return_values[0]);\n        let diceValue = return_values[0] as u8;\n        let mut horsesRawValue: [Field;4] = storage.horses.read();\n        let spawnPoint: u120 = 1 + (player * 14) as u120;\n        let endPoint: u120 = 1 + ((((player * 14) + 55) as u120) % 56);\n        if move < 4 {\n            // get horse id based on player\n            let horseId: u120 = move as u120;\n            let mut horsesValue: u120 = horsesRawValue[player as u8] as u120;\n            let horsePosition = (horsesValue >> (8 * horseId));\n            if horsePosition == 0 {\n                if diceValue == 6 {\n                    for i in 0..4 {\n                        for y in 0..4 {\n                            assert(((horsesRawValue[i] as u120) >> (8 * (y as u120))) & (0xFF as u120) != spawnPoint , \"Horse already on spawn point\");\n                        }\n                    }\n                    horsesValue = horsesValue | (1 << (8 * horseId));\n                } else {\n                    assert(false, \"You can only move a horse out if you roll a 6\");\n                }\n                horsesRawValue[player as u8] = horsesValue as Field;\n            } else {\n                let mut newHorsePosition = horsePosition + diceValue as u120;\n                if (horsePosition == endPoint) {\n                   let expected = 1;\n                   if expected as u8 == diceValue {\n                    newHorsePosition = 57;\n                   } else {\n                    newHorsePosition = horsePosition;\n                   }\n                } else {\n                    if horsePosition > 56 {\n                        let expected = horsePosition - 55;\n                        if expected as u8 == diceValue {\n                            newHorsePosition = horsePosition + 1;\n                        } else {\n                            newHorsePosition = horsePosition;\n                        }\n                    } else {\n                let mut invalidPos = true;\n                for i in 0..16 {\n                    if invalidPos == true {\n                    for hi in 0..4 {\n                        for hy in 0..4 {\n                            if ((horsesRawValue[hi as u120] as u120) >> (8 * (hy as u120))) & (0xFF as u120) == newHorsePosition {\n                                    if hi == player {\n                                        if hy != move {\n                                            if newHorsePosition > 0 {\n                                                newHorsePosition -= 1;\n                                            } else {\n                                                newHorsePosition = 55;\n                                            }\n                                        }\n                                    } else {\n                                        horsesRawValue[hi as u120] = ((horsesRawValue[hi as u120] as u120) & !(0xFF << (8 * (hy as u120)))) as Field;\n                                        invalidPos = false;\n                                    }\n                            }\n                        }\n                    }\n                    }\n                }\n\n                if horsePosition < endPoint {\n                    if newHorsePosition > endPoint {\n                        newHorsePosition = endPoint - (newHorsePosition - endPoint);\n                    }\n                }\n\n                if newHorsePosition > 56 {\n                    newHorsePosition = ((newHorsePosition - 1) % 56) + 1;\n                }\n                }\n                }\n\n                horsesRawValue[player as u120] = ((((horsesRawValue[player as u8] as u120) & !(0xFF << (8 * (horseId as u120)))) as u120) | ((newHorsePosition << (8 * horseId)) as u120)) as Field;\n                if (newHorsePosition == 62) {\n                    storage.winner.write(player + 1);\n                }\n            }\n            storage.horses.write(horsesRawValue);\n            if diceValue != 6 {\n                storage.round.write(currentRound + 1);\n            }\n        }\n    }\n\n    unconstrained fn players() -> [Field; 4] {\n        storage.players.read()\n    }\n\n    unconstrained fn seedHashes() -> [Field; 4] {\n        storage.seedHashes.read()\n    }\n\n    unconstrained fn dices() -> Field {\n        storage.dices.read()\n    }\n\n    unconstrained fn horses() -> [Field;4] {\n        storage.horses.read()\n    }\n\n    unconstrained fn winner() -> Field {\n        storage.winner.read()\n    }\n\n    unconstrained fn round() -> Field {\n        storage.round.read()\n    }\n\n    unconstrained fn last_timestamp() -> Field {\n        storage.last_timestamp.read()\n    }\n\n    unconstrained fn debug() -> Field {\n        storage.debug.read()\n    }\n\n\n    // Below this point is the stuff of nightmares.\n    // This should ideally not be required. What do we do if vastly different types of serialized_notes?\n\n    // docs:start:compute_note_hash_and_nullifier\n    // Computes note hash and nullifier.\n    // Note 1: Needs to be defined by every contract producing logs.\n    // Note 2: Having it in all the contracts gives us the ability to compute the note hash and nullifier differently for different kind of notes.\n    unconstrained fn compute_note_hash_and_nullifier(_: Field, _: Field, _: Field, _: [Field; 0]) -> [Field; 4] {\n        [0, 0, 0, 0]\n    }\n    // docs:end:compute_note_hash_and_nullifier\n}\n// docs:end:token_all\n",
        "path": "/home/mortimr/projects/ethglobal/turkish/zkgames/src/contracts/zkpticv/src/main.nr"
      },
      "35": {
        "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
        "path": "std/option.nr"
      },
      "38": {
        "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
        "path": "/aztec/abi.nr"
      },
      "41": {
        "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    blocks_tree_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
        "path": "/aztec/context.nr"
      },
      "42": {
        "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse crate::constants_gen::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n  let sha256_hashed = sha256(bytes_to_hash);\n\n  // Convert it to a field element\n  let mut v = 1;\n  let mut high = 0 as Field;\n  let mut low = 0 as Field;\n\n  for i in 0..16 {\n      high = high + (sha256_hashed[15 - i] as Field) * v;\n      low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n      v = v * 256;\n  }\n\n  // Abuse that a % p + b % p = (a + b) % p and that low < p\n  let hash_in_a_field = low + high * v;\n\n  hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n  // TODO(#1205) This is probably not the right index to use\n  pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n  pedersen_hash_with_separator(inputs, hash_index)\n}",
        "path": "/aztec/hash.nr"
      },
      "57": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/aztec/oracle/arguments.nr"
      },
      "58": {
        "source": "use crate::constants_gen::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: Field,\n    _function_selector: Field,\n    _args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: Field,\n    function_selector: Field,\n    args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n    )\n}",
        "path": "/aztec/oracle/call_private_function.nr"
      },
      "65": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
        "path": "/aztec/oracle/enqueue_public_function_call.nr"
      },
      "66": {
        "source": "use crate::constants_gen::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}\n",
        "path": "/aztec/oracle/public_call.nr"
      },
      "68": {
        "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
        "path": "/aztec/oracle/storage.nr"
      },
      "70": {
        "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse crate::constants_gen::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::hash::pedersen_hash;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}",
        "path": "/aztec/private_call_stack_item.nr"
      },
      "71": {
        "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
        "path": "/aztec/public_call_stack_item.nr"
      },
      "72": {
        "source": "use crate::utils::field_from_bytes;\n\nglobal SELECTOR_SIZE = 4;\n\npub fn compute_selector<N>(signature: str<N>) -> Field {\n    let bytes = signature.as_bytes();\n    let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n    \n    let mut selector_be_bytes = [0; SELECTOR_SIZE];\n    for i in 0..SELECTOR_SIZE {\n        selector_be_bytes[i] = hash[i];\n    }\n\n    field_from_bytes(selector_be_bytes, true)\n}",
        "path": "/aztec/selector.nr"
      },
      "76": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/aztec/state_vars/public_state.nr"
      },
      "85": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
        "path": "/aztec/types/type_serialization/field_serialization.nr"
      },
      "88": {
        "source": "pub fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}",
        "path": "/aztec/utils.nr"
      }
    }
  },
  "aztecNrVersion": "aztec-packages-v0.15.0"
}